#use "topfind";;
#require "unix";;
#load "r.cma";;
#load "oCamlR.cma";;

open R.Internal.Pretty;;
let show x = (R.Internal.Pretty.t_of_sexp (Obj.magic x));;
let show_detailed x = (R.Internal.C.t_of_sexp (Obj.magic x));;

open R.RevEngineering;;

let x = R.Raw.parse_sexp "str(lm)";;

(* This works: *)
let result_r = R.Raw.eval_langsxp x;;

(* This also work: *)
let result_ml = ml_eval x;;

(*******************************************)

(* We now try to construct a call manually. *)

let str = R.force (R.symbol "str");;
let lm  = R.force (R.symbol "lm");;

let z = R.Raw.langsxp_of_list [(Obj.magic str); (Obj.magic lm)] 2;;
let z_f = fun_of_call z;;
let z_args = args_of_call z;;
let z_prom_args = promiseArgs z_args;;

(* R.Raw.eval_langsxp fonctionne sur z, mais pas ml_eval. *)

let x_f = R.findfun (Obj.magic (fun_of_call x));;
let x_args = args_of_call x;;
let x_prom_args = promiseArgs x_args;;
